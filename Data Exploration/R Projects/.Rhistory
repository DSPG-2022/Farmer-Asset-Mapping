values_from = data
)
#Pivoting wide
IEM_wide <- IEM_long %>%
pivot_wider(
names_from = variables,
values_from = data
)
View(IEM_wide)
#Pivoting wide
IEM_wide <- IEM_long %>%
pivot_wider(
starts_with("data."),
names_from = variables,
values_from = data
)
View(IEM_wide)
#Converting output to a long format
IEM_long <- gsub("\\..*","") %>%
gather(IEM_data, key = "variables", value = "data")
#Cleaning value names before converting wide
gsub("\\..*","", IEM_long$variables)
#Cleaning value names before converting wide
gsub("\\.*.","", IEM_long$variables)
#Cleaning value names before converting wide
gsub("\\*..","", IEM_long$variables)
#Cleaning value names before converting wide
gsub("\\..","", IEM_long$variables)
#Cleaning value names before converting wide
gsub("\\.*.","", IEM_long$variables)
knitr::opts_chunk$set
library(ggplot2)
library(httr)
library(xml2)
library(readr)
library(rvest)
library(tidyr)
library(rjson)
library(stringr)
#Cleaning value names before converting wide
str_replace(IEM_long$variables, "data.", "")
#gsub("\\..","", IEM_long$variables)
#Cleaning value names before converting wide
string_cleaned_IEM <- IEM_long %>%
str_replace(IEM_long$variables, "data.", "") %>%
gsub("\\..","", IEM_long$variables)
#Cleaning value names before converting wide
string_cleaned_IEM <- IEM_long %>%
str_replace("data.", "") %>%
gsub("\\..","", IEM_long$variables)
#Cleaning value names before converting wide
string_cleaned_IEM <- IEM_long %>%
str_replace("data.", "") %>%
gsub("\\..*","", IEM_long$variables)
#Cleaning value names before converting wide
string_cleaned_IEM <- IEM_long %>%
str_replace("data.", "") %>%
gsub("\\..*","")
#Cleaning value names before converting wide
string_cleaned_IEM <- IEM_long %>%
str_replace("data.", "") %>%
gsub("\\..*","", IEM_long$variables)
#Cleaning value names before converting wide
string_cleaned_IEM <- IEM_long %>%
str_replace("data.", "") %>%
gsub(IEM_long$variables, "\\..*","")
#Cleaning value names before converting wide
string_cleaned_IEM <- IEM_long %>%
str_replace("data.", "")
#Cleaning value names before converting wide
string_cleaned_IEM <- IEM_long %>%
str_replace(IEM_long$variables, "data.", "")
#Cleaning value names before converting wide
string_cleaned_IEM <- IEM_long$variables %>%
str_replace("data.", "")
#Cleaning value names before converting wide
string_cleaned_IEM <- IEM_long$variables %>%
str_replace("data.", "") %>%
gsub("\\..*","")
#Cleaning value names before converting wide
string_cleaned_IEM <- IEM_long$variables %>%
str_replace("data.", "") %>%
gsub("\\..*","")
#Cleaning value names before converting wide
string_cleaned_IEM <- IEM_long$variables %>%
str_replace("data.", "")
#Cleaning value names before converting wide
IEM_long$variables %>%
str_replace("data.", "")
#Cleaning value names before converting wide
IEM_long$variables %>%
str_replace("data.", "") %>%
gsub("\\..*","")
#Cleaning value names before converting wide
IEM_long$variables %>%
str_replace("data.", "") %>%
gsub("\\..*","", IEM_long$variables)
#Cleaning value names before converting wide
IEM_long$variables %>%
str_replace("data.", "") %>%
str_replace("\\..*", "")
#Cleaning value names before converting wide
IEM_string_clean <- IEM_long$variables %>%
str_replace("data.", "") %>%
str_replace("\\..*", "")
View(IEM_long)
#Cleaning value names before converting wide
IEM_long$variables %>%
str_replace("data.", "") %>%
str_replace("\\..*", "")
View(IEM_long)
#Cleaning value names before converting wide
IEM_long$variables %>%
str_replace("data.", "") %>%
str_replace("\\..*", "") %>%
mutate(variable = variables)
#Cleaning value names before converting wide
IEM_long <- IEM_long$variables %>%
str_replace("data.", "") %>%
str_replace("\\..*", "")
#Cleaning value names before converting wide
IEM_long %>%
str_replace("data.", "", IEM_long$variables) %>%
str_replace(IEM_long$variables, "\\..*", "")
#Cleaning value names before converting wide
IEM_long %>%
str_replace("data.", "", IEM_long$variables) %>%
str_replace(.variables, "\\..*", "")
#Cleaning value names before converting wide
IEM_long %>%
str_replace("data.", "", IEM_long$variables) %>%
str_replace("\\..*", "", IEM_long$variables)
#Cleaning value names before converting wide
IEM_long %>%
str_replace("data.", "", IEM_long$variables) %>%
str_replace("\\..*", "", IEM_long$variables)
#Cleaning value names before converting wide
IEM_long %>%
str_replace(IEM_long$variables, "data.", "") %>%
str_replace(IEM_long$variables, "\\..*", "")
#Cleaning value names before converting wide
IEM_long %>%
str_replace(IEM_long$variables, "data.", "") %>%
str_replace(IEM_long$variables, "\\..*", "")
#Cleaning value names before converting wide
IEM_long %>%
str_replace("data.", "") %>%
str_replace("\\..*", "")
#Converting output to a long format
IEM_long <- gather(IEM_data, key = "variables", value = "data")
knitr::opts_chunk$set
library(ggplot2)
library(httr)
library(xml2)
library(readr)
library(rvest)
library(tidyr)
library(rjson)
library(stringr)
#Format URL to be ready for time and place input
base_url <- "https://mesonet.agron.iastate.edu/iemre/multiday/"
start_time = "2019-01-01"
end_time = "2019-06-01"
latitude = "42.54"
longitude = "-96.40"
json = "/json"
full_url <- sprintf("https://mesonet.agron.iastate.edu/iemre/multiday/%s/%s/%s/%s/json", start_time, end_time, latitude, longitude)
## Downloads data from the IEM website in json format
#download.file(url = full_url, destfile = "test.json")
#Read Json file
IEM_json <- fromJSON(file = "test.json")
#Converting to data frame
IEM_data <- as.data.frame(IEM_json)
#Converting output to a long format
IEM_long <- gather(IEM_data, key = "variables", value = "data")
#Cleaning value names before converting wide
IEM_long$variables %>%
str_replace("data.", "") %>%
str_replace("\\..*", "")
View(IEM_long)
#Cleaning value names before converting wide
IEM_string_clean <- IEM_long$variables %>%
str_replace("data.", "") %>%
str_replace("\\..*", "")
#Cleaning value names before converting wide
IEM_clean_variables <- IEM_long$variables %>%
str_replace("data.", "") %>%
str_replace("\\..*", "")
#Cleaning value names before converting wide
IEM_clean_variables <- IEM_long$variables %>%
str_replace("data.", "") %>%
str_replace("\\..*", "")
print(IEM_clean_variables)
#Cleaning value names before converting wide
IEM_clean_variables <- IEM_long$variables %>%
str_replace("data.", "") %>%
str_replace("\\..*", "")
IEM_long <- (IEM_long$variables = IEM_clean_variables)
View(IEM_json)
View(IEM_json)
#Cleaning value names before converting wide
IEM_clean_variables <- IEM_long$variables %>%
str_replace("data.", "") %>%
str_replace("\\..*", "")
knitr::opts_chunk$set
library(ggplot2)
library(httr)
library(xml2)
library(readr)
library(rvest)
library(tidyr)
library(rjson)
library(stringr)
#Format URL to be ready for time and place input
base_url <- "https://mesonet.agron.iastate.edu/iemre/multiday/"
start_time = "2019-01-01"
end_time = "2019-06-01"
latitude = "42.54"
longitude = "-96.40"
full_url <- sprintf("https://mesonet.agron.iastate.edu/iemre/multiday/%s/%s/%s/%s/json", start_time, end_time, latitude, longitude)
## Downloads data from the IEM website in json format
#download.file(url = full_url, destfile = "test.json")
#Read Json file
IEM_json <- fromJSON(file = "test.json")
#Converting to data frame
IEM_data <- as.data.frame(IEM_json)
knitr::opts_chunk$set
library(ggplot2)
library(httr)
library(xml2)
library(readr)
library(rvest)
library(tidyr)
library(rjson)
library(stringr)
#Format URL to be ready for time and place input
base_url <- "https://mesonet.agron.iastate.edu/iemre/multiday/"
start_time = "2019-01-01"
end_time = "2019-06-01"
latitude = "42.54"
longitude = "-96.40"
full_url <- sprintf("https://mesonet.agron.iastate.edu/iemre/multiday/%s/%s/%s/%s/json", start_time, end_time, latitude, longitude)
## Downloads data from the IEM website in json format
#download.file(url = full_url, destfile = "test.json")
#Read Json file
IEM_json <- fromJSON(file = "test.json")
#Converting to data frame
IEM_data <- as.data.frame(IEM_json)
#Converting output to a long format
IEM_long <- gather(IEM_data, key = "variables", value = "data")
#Cleaning value names before converting wide
IEM_clean_variables <- IEM_long$variables %>%
str_replace("data.", "") %>%
str_replace("\\..*", "")
IEM_long %>%
mutate(vary = c(IEM_clean_variables))
#Cleaning value names before converting wide
IEM_clean_variables <- IEM_long$variables %>%
str_replace("data.", "") %>%
str_replace("\\..*", "")
IEM_long$variables = c(IEM_clean_variables)
View(IEM_long)
#Pivoting data frame to Wide Format
IEM_wide <- gather(IEM_long)
View(IEM_wide)
#Pivoting data frame to Wide Format
IEM_wide <- gather(IEM_long, key = "date")
View(IEM_data)
View(IEM_wide)
View(IEM_long)
#Pivoting data frame to Wide Format
IEM_wide <- pivot_wider(IEM_long,
names_from = variables,
values_from = data
)
View(IEM_wide)
#Pivoting data frame to Wide Format
IEM_wide <- pivot_wider(IEM_long,
names_from = variables,
values_from = data,
values_fn = list)
View(IEM_wide)
View(IEM_long)
knitr::opts_chunk$set
library(ggplot2)
library(httr)
library(xml2)
library(readr)
library(rvest)
library(tidyr)
library(rjson)
library(stringr)
#Format URL to be ready for time and place input
base_url <- "https://mesonet.agron.iastate.edu/iemre/multiday/"
start_time = "2019-01-01"
end_time = "2019-06-01"
latitude = "42.54"
longitude = "-96.40"
full_url <- sprintf("https://mesonet.agron.iastate.edu/iemre/multiday/%s/%s/%s/%s/json", start_time, end_time, latitude, longitude)
## Downloads data from the IEM website in json format
#download.file(url = full_url, destfile = "test.json")
#Read Json file
IEM_json <- fromJSON(file = "test.json")
#Converting to data frame
IEM_data <- as.data.frame(IEM_json)
#Converting output to a long format
IEM_long <- gather(IEM_data, key = "variables", value = "data")
#Cleaning value names before converting wide
IEM_clean_variables <- IEM_long$variables %>%
str_replace("data.", "") %>%
str_replace("\\..*", "")
IEM_long$variables = c(IEM_clean_variables)
#Pivoting data frame to Wide Format
IEM_wide <- pivot_wider(IEM_long,
names_from = variables,
values_from = data,
)
knitr::opts_chunk$set
library(ggplot2)
library(httr)
library(xml2)
library(readr)
library(rvest)
library(tidyr)
library(rjson)
library(stringr)
library(tidyverse)
#Pivoting data frame to Wide Format
IEM_long %>%
mutate(row = row_number())
IEM_wide <- pivot_wider(IEM_long,
names_from = variables,
values_from = data,
)
#Pivoting data frame to Wide Format
IEM_wide <- IEM_long %>%
pivot_wider(-row,
names_from = variables,
values_from = data,
)
#Pivoting data frame to Wide Format
IEM_wide <- IEM_long %>%
mutate(row = row_number()) %>%
pivot_wider(-row,
names_from = variables,
values_from = data,
)
View(IEM_wide)
#Pivoting data frame to Wide Format
spread(IEM_long)
knitr::opts_chunk$set
library(ggplot2)
library(httr)
library(xml2)
library(readr)
library(rvest)
library(tidyr)
library(rjson)
library(stringr)
library(tidyverse)
#Format URL to be ready for time and place input
base_url <- "https://mesonet.agron.iastate.edu/iemre/multiday/"
start_time = "2019-01-01"
end_time = "2019-06-01"
latitude = "42.54"
longitude = "-96.40"
full_url <- sprintf("https://mesonet.agron.iastate.edu/iemre/multiday/%s/%s/%s/%s/json", start_time, end_time, latitude, longitude)
## Downloads data from the IEM website in json format
#download.file(url = full_url, destfile = "test.json")
#Read Json file
IEM_json <- fromJSON(file = "test.json")
#Converting to data frame
IEM_data <- as.data.frame(IEM_json)
#Converting output to a long format
IEM_long <- gather(IEM_data, key = "variables", value = "data")
#Cleaning value names before converting wide
IEM_clean_variables <- IEM_long$variables %>%
str_replace("data.", "") %>%
str_replace("\\..*", "")
IEM_long$variables = c(IEM_clean_variables)
#Pivoting data frame to Wide Format
spread(IEM_long, variable, data)
#Pivoting data frame to Wide Format
spread(IEM_long, variables, data)
#Pivoting data frame to Wide Format
IEM_long %>%
mutate(row = row_number())
spread(IEM_long, variables, data)
#Pivoting data frame to Wide Format
IEM_long %>%
mutate(row = row_number())
spread(IEM_long, variables, data)
#Pivoting data frame to Wide Format
IEM_long %>%
mutate(row = row_number())
#Pivoting data frame to Wide Format
IEM_long %>%
mutate(row = row_number())
IEM_wide <- IEM_long %>%
pivot_wider(-row,
names_from = variables,
values_from = data
)
#Pivoting data frame to Wide Format
IEM_long %>%
mutate(row = row_number())
IEM_wide <- IEM_long %>%
pivot_wider(-row,
names_from = variables,
values_from = data
)
View(IEM_long)
#Pivoting data frame to Wide Format
IEM_wide <- IEM_long %>%
mutate(row = row_number()) %>%
pivot_wider(-row,
names_from = variables,
values_from = data
)
#Pivoting data frame to Wide Format
IEM_wide <- IEM_long %>%
mutate(row = row_number()) %>%
pivot_wider(-row,
names_from = variables,
values_from = data
) %>%
as.data.frame(do.call(cbind, IEM_long))
View(IEM_wide)
#Pivoting data frame to Wide Format
IEM_wide <- IEM_long %>%
mutate(row = row_number()) %>%
pivot_wider(-row,
names_from = variables,
values_from = data
) %>%
as.data.frame(do.call(rbind, IEM_long))
View(IEM_wide)
View(IEM_wide)
#Pivoting data frame to Wide Format
IEM_wide <- IEM_long %>%
mutate(row = row_number()) %>%
pivot_wider(-row,
names_from = variables,
values_from = data
) %>%
as.data.frame(do.call(rbind))
View(IEM_wide)
#Pivoting data frame to Wide Format
IEM_wide <- IEM_long %>%
mutate(row = row_number()) %>%
pivot_wider(-row,
names_from = variables,
values_from = data
) %>%
as.data.frame(do.call(rbind, IEM_long$data))
View(IEM_wide)
#Pivoting data frame to Wide Format
IEM_wide <- IEM_long %>%
mutate(row = row_number()) %>%
pivot_wider(-row,
names_from = variables,
values_from = data
) %>%
as.data.frame(do.call(rbind, IEM_long$date))
View(IEM_wide)
#Pivoting data frame to Wide Format
IEM_wide <- IEM_long %>%
mutate(row = row_number()) %>%
pivot_wider(-row,
names_from = variables,
values_from = data
)
IEM_wide
View(IEM_wide)
#Pivoting data frame to Wide Format
IEM_wide <- IEM_long %>%
mutate(row = row_number()) %>%
pivot_wider(-row,
names_from = variables,
values_from = data
)
IEM_wide %>%
separate_rows(IEM_wide, sep = ",")
#Pivoting data frame to Wide Format
IEM_wide <- IEM_long %>%
mutate(row = row_number()) %>%
pivot_wider(-row,
names_from = variables,
values_from = data
)
IEM_wide %>%
unnest(IEM_wide)
#Pivoting data frame to Wide Format
IEM_wide <- IEM_long %>%
mutate(row = row_number()) %>%
pivot_wider(-row,
names_from = variables,
values_from = data
)
IEM_please <- IEM_wide %>%
unnest(IEM_wide)
library(leaflet)
leaflet() %>%
addProviderTiles(provider = "CartoDB")
library(leaflet)
names(providers)
leaflet() %>%
addProviderTiles(provider = "CartoDB")
renv::activate()
install.packages(usethis)
install.packages("usethis")
usethis::use_vignette(name = "newvignette", title = "New Vignette")
